"""Init

Revision ID: a13ebc63143a
Revises:
Create Date: 2025-04-07 19:21:36.257985

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op


# revision identifiers, used by Alembic.
revision: str = "a13ebc63143a"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "bots",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("token", sa.String(), nullable=True),
        sa.Column("secret_token", sa.String(), nullable=True),
        sa.Column("default_reply", sa.String(length=3000), nullable=True),
        sa.Column("username", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_bots_id"), "bots", ["id"], unique=False)
    op.create_index(op.f("ix_bots_token"), "bots", ["token"], unique=True)

    # Сначала создаем таблицы без внешних ключей
    op.create_table(
        "chains",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("bot_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("first_chain_step_id", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )

    op.create_table(
        "chain_steps",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("chain_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("message", sa.String(), nullable=False),
        sa.Column("next_step_id", sa.Integer(), nullable=True),
        sa.Column("text_input", sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )

    # Затем добавляем внешние ключи
    with op.batch_alter_table("chains") as batch_op:
        batch_op.create_foreign_key(
            "fk_chains_first_chain_step_id",
            "chain_steps",
            ["first_chain_step_id"],
            ["id"],
            ondelete="SET NULL",
        )
        batch_op.create_foreign_key(
            "fk_chains_bot_id", "bots", ["bot_id"], ["id"]
        )

    with op.batch_alter_table("chain_steps") as batch_op:
        batch_op.create_foreign_key(
            "fk_chain_steps_chain_id", "chains", ["chain_id"], ["id"]
        )
        batch_op.create_foreign_key(
            "fk_chain_steps_next_step_id",
            "chain_steps",
            ["next_step_id"],
            ["id"],
            ondelete="SET NULL",
        )

    # Остальные таблицы
    op.create_table(
        "chain_buttons",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("step_id", sa.Integer(), nullable=False),
        sa.Column("text", sa.String(), nullable=False),
        sa.Column("next_step_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["next_step_id"], ["chain_steps.id"], ondelete="SET NULL"
        ),
        sa.ForeignKeyConstraint(
            ["step_id"],
            ["chain_steps.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    op.create_table(
        "main_menu",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("welcome_message", sa.String(length=3000), nullable=True),
        sa.Column("bot_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["bot_id"], ["bots.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_main_menu_id"), "main_menu", ["id"], unique=False)

    op.create_table(
        "bot_users",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("bot_id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(), nullable=True),
        sa.Column("first_name", sa.String(), nullable=True),
        sa.Column("last_name", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(["bot_id"], ["bots.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        schema="public",
    )
    op.create_index(
        "idx_bot_user_unique",
        "bot_users",
        ["bot_id", "user_id"],
        unique=True,
        schema="public",
    )

    op.create_table(
        "user_state",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("bot_id", sa.Integer(), nullable=False),
        sa.Column("chain_id", sa.Integer(), nullable=True),
        sa.Column("step_id", sa.Integer(), nullable=True),
        sa.Column("expects_text_input", sa.Boolean(), nullable=True),
        sa.Column("result", sa.JSON(), nullable=True),
        sa.Column("last_message_id", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["bot_id"],
            ["bots.id"],
        ),
        sa.ForeignKeyConstraint(
            ["chain_id"],
            ["chains.id"],
        ),
        sa.ForeignKeyConstraint(
            ["step_id"],
            ["chain_steps.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    op.create_table(
        "buttons",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("button_text", sa.String(length=64), nullable=False),
        sa.Column("reply_text", sa.String(length=3000), nullable=True),
        sa.Column("main_menu_id", sa.Integer(), nullable=True),
        sa.Column("bot_id", sa.Integer(), nullable=True),
        sa.Column("chain_id", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["bot_id"],
            ["bots.id"],
        ),
        sa.ForeignKeyConstraint(
            ["chain_id"],
            ["chains.id"],
        ),
        sa.ForeignKeyConstraint(
            ["main_menu_id"], ["main_menu.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_buttons_bot_id"), "buttons", ["bot_id"], unique=False
    )
    op.create_index(op.f("ix_buttons_id"), "buttons", ["id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_buttons_id"), table_name="buttons")
    op.drop_index(op.f("ix_buttons_bot_id"), table_name="buttons")
    op.drop_table("buttons")
    op.drop_table("user_state")
    op.drop_index(
        "idx_bot_user_unique", table_name="bot_users", schema="public"
    )
    op.drop_table("bot_users", schema="public")
    op.drop_index(op.f("ix_main_menu_id"), table_name="main_menu")
    op.drop_table("main_menu")
    op.drop_table("chain_buttons")

    # Удаляем внешние ключи перед удалением таблиц
    with op.batch_alter_table("chain_steps") as batch_op:
        batch_op.drop_constraint("fk_chain_steps_chain_id", type_="foreignkey")
        batch_op.drop_constraint(
            "fk_chain_steps_next_step_id", type_="foreignkey"
        )

    with op.batch_alter_table("chains") as batch_op:
        batch_op.drop_constraint(
            "fk_chains_first_chain_step_id", type_="foreignkey"
        )
        batch_op.drop_constraint("fk_chains_bot_id", type_="foreignkey")

    op.drop_table("chain_steps")
    op.drop_table("chains")
    op.drop_index(op.f("ix_bots_token"), table_name="bots")
    op.drop_index(op.f("ix_bots_id"), table_name="bots")
    op.drop_table("bots")
    # ### end Alembic commands ###
