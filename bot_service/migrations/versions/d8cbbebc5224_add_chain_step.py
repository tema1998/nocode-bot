"""Add chain_step

Revision ID: d8cbbebc5224
Revises: db0cb776463f
Create Date: 2025-03-16 20:40:40.763749

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op


# revision identifiers, used by Alembic.
revision: str = "d8cbbebc5224"
down_revision: Union[str, None] = "db0cb776463f"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "chain_steps",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("chain_id", sa.Integer(), nullable=False),
        sa.Column("message", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["chain_id"],
            ["chains.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.add_column(
        "chain_buttons", sa.Column("step_id", sa.Integer(), nullable=False)
    )
    op.add_column(
        "chain_buttons", sa.Column("next_step_id", sa.Integer(), nullable=True)
    )
    op.create_foreign_key(
        None, "chain_buttons", "chain_steps", ["step_id"], ["id"]
    )
    op.create_foreign_key(
        None, "chain_buttons", "chain_steps", ["next_step_id"], ["id"]
    )
    op.add_column(
        "chains", sa.Column("first_chain_step_id", sa.Integer(), nullable=True)
    )
    op.create_foreign_key(
        None, "chains", "chain_steps", ["first_chain_step_id"], ["id"]
    )
    op.add_column(
        "user_state", sa.Column("step_id", sa.Integer(), nullable=True)
    )
    op.create_foreign_key(
        None, "user_state", "chain_steps", ["step_id"], ["id"]
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "user_state", type_="foreignkey")  # type: ignore
    op.drop_column("user_state", "step_id")
    op.drop_constraint(None, "chains", type_="foreignkey")  # type: ignore
    op.drop_column("chains", "first_chain_step_id")
    op.drop_constraint(None, "chain_buttons", type_="foreignkey")  # type: ignore
    op.drop_constraint(None, "chain_buttons", type_="foreignkey")  # type: ignore
    op.drop_column("chain_buttons", "next_step_id")
    op.drop_column("chain_buttons", "step_id")
    op.drop_table("chain_steps")
    # ### end Alembic commands ###
